#!/usr/bin/python

import argparse
import logging as log
import os
import yaml

VERSION = "0"

def merge(x, y):
    """
    store a copy of x, but overwrite with y's values where applicable
    """
    merged = dict(x, **y)

    xkeys = x.keys()

    # if the value of merged[key] was overwritten with y[key]'s value
    # then we need to put back any missing x[key] values
    for key in xkeys:
        # if this key is a dictionary, recurse
        if isinstance(x[key], dict) and key in y:
            merged[key] = merge(x[key], y[key])

    return merged

if __name__ == "__main__":
    # Parse command line arguments
    parser = argparse.ArgumentParser(
        description='Process command line options.')
    parser.add_argument(
        '-d', '--debug', action='store_true', help='Enable debug logging')
    parser.add_argument(
        '-c', '--config', help='Specify a config file to use',
        type=str, default='config.yaml')
    parser.add_argument(
        '-l', '--log-level', help='Log level, default is INFO',
        default=log.INFO)
    parser.add_argument('--version', action='version', version=VERSION)
    args = parser.parse_args()

    log_format = '%(asctime)s:%(name)s:%(levelname)s:%(funcName)s(%(lineno)i):%(message)s'
    log.basicConfig(filename="{}.log".format(os.path.basename(__file__)),
                    level=args.log_level.upper(),
                    format=log_format)

    log.info("Initializing...")

    log.info("Loading configuration...")
    # Load Config
    defaults = {
        # "setting": "value",
    }
    if os.path.isfile(args.config):
        log.debug("Loading config file from {}".format(args.config))
        config = yaml.load(file(args.config))
        if config:
            # config contains items
            config = merge(defaults, yaml.load(file(args.config)))
            log.debug("Config merged with defaults")
        else:
            # config is empty, just use defaults
            config = defaults
            log.debug("Config file was empty, loaded config from defaults")
    else:
        log.debug("Config file does not exist, creating a default config...")
        config = defaults

    log.debug("Config loaded as:\n{}, saving this to disk".format(str(config)))
    with open(args.config, 'w') as outfile:
        outfile.write(yaml.dump(config, default_flow_style=False))
    log.debug("Config loaded as:\n{}".format(str(config)))

    log.info("Initialization complete")
